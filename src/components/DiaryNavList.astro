---
import { getCollection } from "astro:content";
import Link from "@components/Link.astro";

interface Props {
  years: number[];
  col?: boolean;
}

const { years, col } = Astro.props;

let blogs = await getCollection("diary");
const postCount: Record<number, number> = {};
let maxPostCount = 1;
for (let blog of blogs) {
  let year = blog.data.date.getFullYear();
  // We start at -1 to make it 0 indexed,
  // so that the font size scales easily between the lower and upper bounds
  postCount[year] = (postCount[year] ?? -1) + 1;

  if (postCount[year] > maxPostCount) {
    maxPostCount = postCount[year];
  }
}

years.sort();
---

<div class={`flex sm:flex-row flex-col gap-4 lg:gap-3 justify-center items-baseline ${col ? "flex-col" : ""}`}>
  {
    years.map((year) => (
      <Link
        href={`/diary/${year}`}
        class="sm:!mx-0"
        activeClass="!text-grey-2 !font-bold"
        style={{ fontSize: `${1 + 1.5 * (postCount[year] / maxPostCount)}rem` }}
        light
      >
        {year}
      </Link>
    ))
  }
</div>
